@{
    Layout = "/Areas/Admin/Views/Shared/_Layout2.cshtml";
}
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using Pizza.Models.ViewModels;
@model ProductViewModel;
<link rel="stylesheet" href="~/css/Admin/adminProduct.css" />
<link rel="stylesheet" href="~/css/Input/inputFile.css">




@if(Model.Product.CategoriesName != null)
{
    <table>
        <thead>
            <tr>
                <td>Id</td>
                <td>Название</td>
                <td>Изображение</td>
                <td>Цена</td>
                <td colspan="2">Действие</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.products)
            {
                <form asp-action="Edit">
                <tr id="@item.Id">
                    <input class="idInput" style="display:none" asp-for="Product.Id" value="@item.Id" />
                    <td>@item.Id</td>
                    <td>
                        <p>@item.Name</p>
                        <input class="editNameInput" asp-for="Product.Name" value="@item.Name" type="text" style="display: none;" />
                    </td>
                    <td>
                        <img src="@item.ImgPath" alt="" class="item-image">
                        <label class="input-file" style="display: none;">
                            <input class="file" type="file" />
                            <span>Выберите файл</span>
                            <input type="text" class="imgPath" asp-for="Product.ImgPath" value="@item.ImgPath" style="display:none">
                        </label>
                    </td>
                    <td>
                        <p>@item.Price</p>
                        <input class="editPriceInput" asp-for="Product.Price" value="@item.Price" type="text" style="display: none;" />
                    </td>
                    <td>
                        <a href="#" class="edit"><img src="/images/adminImage/edit.svg" alt=""></a>
                        <a href="#" style="display: none;" class="save"><img src="/images/adminImage/save.svg" alt=""></a>
                    </td>
                    <td>
                        <a asp-action="delete" asp-route-id="@item.Id" class="delete"><img src="/images/adminImage/delete.svg" alt=""></a>
                        <a href="#" style="display: none;" class="closeEdit"><img src="/images/adminImage/close.svg" alt=""></a>
                    </td>
                </tr>
                </form>
            }
        </tbody>
    </table>
    <a href="#" class="addblock">
        <img src="/images/adminImage/add.svg" alt="">
    </a>
}

<div class="window-settings">
    <form asp-action="Save" asp-controller="Products" asp-area="Admin">
        <div class="block-input">
            <div class="input-values">
                <label class="input-file">
                    <span class="error-image"></span>
                    <input type="file" class="image">
                    <span class="choice-file">Основное изображение</span>
                    <input type="text" class="main-image__file" style="display:none;" asp-for="Product.ImgPath">
                </label>

                <select class="select-category" asp-for="Product.CategoriesName">
                    <option value="pizza">Пицца</option>
                    <option value="roll">Роллы</option>
                </select>

                <span class="error-href"></span>
                <input type="text" class="nameProduct" placeholder="Название" asp-for="Product.Name">

                <span class="error-content"></span>
                <input type="text" class="priceProduct" placeholder="Цена" asp-for="Product.Price">
            </div>
            <div class="image-choice">
                <span>Изображение</span>
            </div>
        </div>
        <div class="action-btn">
            <button class="close">Закрыть</button>
            <button class="save">Сохранить</button>
        </div>
    </form>
</div>



<script>

    // При нажатии на кнопку редактирования
    const editBlockSet = document.querySelectorAll(".edit").forEach((e) => {
        e.addEventListener("click", async c => {

            const elements = c.target.parentNode.parentNode.parentNode.childNodes
            elements[5].lastElementChild.style.display = "flex"
            elements[5].lastElementChild.style.justifyContent = "center"
            elements[5].firstElementChild.style.display = "none"

            elements[3].lastElementChild.style.display = "inherit"
            //elements[3].lastElementChild.value = elements[3].firstElementChild.textContent
            elements[3].firstElementChild.style.display = "none"

            elements[7].lastElementChild.style.display = "inherit"
            //elements[7].lastElementChild.value = elements[7].firstElementChild.textContent
            elements[7].firstElementChild.style.display = "none"


            elements[9].firstElementChild.style.display = "none"
            elements[9].childNodes[3].style.display = "block"

            elements[11].firstElementChild.style.display = "none"
            elements[11].childNodes[3].style.display = "block"

            // При нажатии на кнопку "закрыть"
            document.querySelectorAll(".closeEdit").forEach((e) => {
                e.addEventListener("click", async c => {
                    elements[3].firstElementChild.style.display = "block"
                    elements[3].firstElementChild.style.display = "none"
                    elements[3].childNodes[1].style.display = "block"
                    elements[3].childNodes[3].style.display = "none"

                    elements[7].firstElementChild.style.display = "block"
                    elements[7].firstElementChild.style.display = "none"
                    elements[7].childNodes[1].style.display = "block"
                    elements[7].childNodes[3].style.display = "none"

                    elements[5].firstElementChild.style.display = "inline-block"
                    elements[5].childNodes[3].style.display = "none"


                    elements[9].firstElementChild.classList.replace("saveEdit", "edit")
                    elements[9].firstElementChild.style.display = "block"
                    elements[9].childNodes[3].style.display = "none"

                    elements[11].firstElementChild.style.display = "block"
                    elements[11].childNodes[3].style.display = "none"
                })
            })
        })
    })
</script>

<script>
    // При нажатии на реадктирование продукта
    var imagePath;
    var buttonFile = document.querySelector(".addFile")

    document.querySelectorAll(".file").forEach((c) => {
        c.addEventListener("change", async e => {
            const file = e.target.files[0]
            if (!file || !file.type.match(/image.*/)) return

            var formData = new FormData()
            formData.append("image", file)

            const response = await fetch("https://api.imageban.ru/v1", {
                method: "POST",
                body: formData,
                headers: {
                    "Accept": "application/json",
                    "Authorization": "TOKEN " + "NzspDu1dS8jc0LTGcJXo"
                }
            })
            if (response.ok == true) {
                const data = await response.json()
                imagePath = data.data.link
                buttonFile.style.backgroundImage = `url("${imagePath}")`
                buttonFile.textContent = ""
                document.querySelectorAll(".imgPath").forEach((e) => {
                    e.value = imagePath
                })
            }
        })
    })
</script>

<script>
    // Для окна добавления, когда добавляете файл
    var imagePath;

    document.querySelector(".image").addEventListener("change", async e => {
        const file = e.target.files[0]
        if (!file || !file.type.match(/image.*/)) return
        var formData = new FormData()
        formData.append("image", file)

        const response = await fetch("https://api.imageban.ru/v1", {
            method: "POST",
            body: formData,
            headers: {
                "Accept": "application/json",
                "Authorization": "TOKEN " + "NzspDu1dS8jc0LTGcJXo"
            }
        })
        if (response.ok == true) {
            const data = await response.json()
            imagePath = data.data.link
            console.log(imagePath)
            document.querySelector(".image-choice").style.backgroundImage = `url("${imagePath}")`
            document.querySelector(".main-image__file").value = imagePath
        }
    })
</script>

<script>
    // Настройка открытия и закрытия окна добавления контента
    const addBlockSet = document.querySelector(".window-settings")

    document.querySelector(".addblock").addEventListener("click", async e => {
        addBlockSet.classList.add("open")
    })
    document.querySelector(".close").addEventListener("click", async e => {
        e.preventDefault();
        addBlockSet.classList.remove("open")
    })
</script>